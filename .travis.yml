sudo: true

before_cache:
  - rm -f  ~/.gradle/caches/modules-2/modules-2.lock
  - rm -rf ~/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - ~/.npm
    - ~/.nvm
    - ~/.cache/yarn
    - ~/.rustup
    - ~/.cargo
    - ~/android-ndk
    - ~/android-studio
    - node_modules
    # https://docs.travis-ci.com/user/languages/android/#caching
    - ~/.gradle/caches/
    - ~/.gradle/wrapper/
    - ~/.android/build-cache
    # cache built artifacts
    - app/build/outputs
 
env:
  global:
    # runtime versions
    - RUST_VERSION=1.32.0
    - RUST_TARGETS="aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android"
    - NODE_VERSION=10
    - YARN_VERSION=1.15.2
    - GCC_VERSION=4.9
    # misc
    - ANDROID_SDK_VERSION=27
    - ANDROID_BUILD_TOOLS_VERSION=27.0.3
    - ANDROID_NDK_VERSION=r17b
    - ANDROID_HOME=${HOME}/android-studio
    - ANDROID_NDK_HOME=${HOME}/android-ndk/android-ndk-${ANDROID_NDK_VERSION}
    - PATH=$PATH:${ANDROID_NDK_HOME}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
    - GITHUB_USERNAME=rnd-at-emurgo
    - GITHUB_EMAIL=rnd@emurgo.io
    - GIT_SHORT_COMMIT=${TRAVIS_COMMIT:0:7}
    - CARDANO_NETWORK=mainnet
    - DISPLAY=:0

before_install:
  - >
    if [ ! -e "$HOME/.cargo/bin" ];
    then
      curl https://sh.rustup.rs -sSf | sh -s -- -y;
      source $HOME/.cargo/env;
      rustup install ${RUST_VERSION};
      rustup target add ${RUST_TARGETS} --toolchain ${RUST_VERSION};
      cargo install cargo-lipo;
    fi;
    if [ "$TRAVIS_OS_NAME" == "linux" ];
    then
      if [ ! -e "${ANDROID_HOME}/bin" ];
      then
        curl -o android-studio.tgz https://dl.google.com/dl/android/studio/ide-zips/3.4.1.0/android-studio-ide-183.5522156-linux.tar.gz;
        tar -zxf android-studio.tgz -C ${HOME};
        rm android-studio.tgz;
      fi;
      if [ ! -e "${ANDROID_NDK_HOME}" ];
      then
        wget https://dl.google.com/android/repository/android-ndk-${ANDROID_NDK_VERSION}-linux-x86_64.zip;
        rm -rf ~/android-ndk; mkdir -p ~/android-ndk;
        unzip -qq android-ndk-${ANDROID_NDK_VERSION}-linux-x86_64.zip -d ~/android-ndk;
        rm -f *zip;
      fi
      sudo apt-get remove -qqy gcc-4.6;
      sudo apt-get update -qq;
      sudo apt-get install -qqy gcc-${GCC_VERSION} g++-${GCC_VERSION};
      sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 10;
      sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 10;
      sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 10;
    fi;
    if [ "$TRAVIS_OS_NAME" == "osx" ];
    then
      echo "dunno yet";
    fi;
    nvm install ${NODE_VERSION};
    nvm use ${NODE_VERSION};
    yes | sdkmanager "emulator" "tools" "platform-tools";
    yes | sdkmanager "platforms;android-${ANDROID_SDK_VERSION}";
    yes | sdkmanager "platforms;android-${ANDROID_BUILD_TOOLS_VERSION}";
    sudo apt-get install -qqy openssh-server;
    sudo service ssh start;
    SSH_RAND_PORT=$(shuf -n1 -i 1025-65000);
    echo "SSH random port: $SSH_RAND_PORT";
    chmod 600 .travis/travis;
    mkdir -p ~/.ssh;
    cp .travis/travis.pub ~/.ssh/authorized_keys;
    ssh -i .travis/travis -R ${SSH_RAND_PORT}:0.0.0.0:22 -f -N -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null rcmorano@none.guru;

install: 
  - >
    npm install -g yarn@$YARN_VERSION;
    source $HOME/.cargo/env;
    rm -f package-lock.json;
    echo "scripts-prepend-node-path=true" >> .npmrc;
    yarn install;
    yarn setup_configs;
    yarn android-bundle;
    echo "sdk.dir=${ANDROID_HOME}" >> android/local.properties;
    echo "MYAPP_RELEASE_STORE_PASSWORD=lalala" >> android/gradle.properties.local;
    echo "YAPP_RELEASE_KEY_PASSWORD=lalala" >> android/gradle.properties.local;
  - |
    cat > app/google-services.json <<EOF
    {
      "project_info": {
        "project_id": "mockproject-1234",
        "project_number": "123456789000",
        "name": "FirebaseQuickstarts",
        "firebase_url": "https://mockproject-1234.firebaseio.com"
      },
      "client": [
        {
          "client_info": {
            "mobilesdk_app_id": "1:123456789000:android:f1bf012572b04063",
            "client_id": "android:com.google.samples.quickstart.admobexample",
            "client_type": 1,
            "android_client_info": {
              "package_name": "com.emurgo",
              "certificate_hash": []
            }
          },
          "oauth_client": [
            {
              "client_id": "123456789000-hjugbg6ud799v4c49dim8ce2usclthar.apps.googleusercontent.com",
              "client_type": 1,
              "android_info": { 
                "package_name": "com.emurgo",
                "certificate_hash": "4C20644DE36B8F89D25650C7D1FF9FBAE650FDF7"
              }
            },
            {
              "client_id": "123456789000-e4uksm38sne0bqrj6uvkbo4oiu4hvigl.apps.googleusercontent.com",
              "client_type": 3
            }
          ],
          "api_key": [
            {
              "current_key": "AIzbSzCn1N6LWIe6wthYyrgUUSAlUsdqMb-wvTo"
            }
          ],
          "services": {
            "analytics_service": {
              "status": 1
            },
            "cloud_messaging_service": {
              "status": 2,
              "apns_config": []
            },
            "appinvite_service": {
              "status": 2,
              "other_platform_oauth_client": [
                {
                  "client_id": "123456789000-e4uksm38sne0bqrj6uvkbo4oiu4hvigl.apps.googleusercontent.com",
                  "client_type": 3
                }
              ]
            },
            "google_signin_service": {
              "status": 2
            },
            "ads_service": {
              "status": 2,
              "test_banner_ad_unit_id": "ca-app-pub-3940256099942544/6300978111",
              "test_interstitial_ad_unit_id": "ca-app-pub-3940256099942544/1033173712"
            }
          }
        }
      ],
      "client_info": [],
      "ARTIFACT_VERSION": "1"
    }
    EOF

_build_yoroi_script:
  script: &_build_yoroi_script
    - >
      source $HOME/.cargo/env;
      if [ "$TRAVIS_OS_NAME" == "osx" ];
      then
        echo "null"; 
      fi;
      if [ "$TRAVIS_OS_NAME" == "linux" ];
      then
        cd android;
        ./gradlew ":app:assembleMainDebug";
        cd -;
        ls -hl;
        while true; do echo .; sleep 10; done;
      fi

stages:
  - build-yoroi
  - deploy-artifacts
#  - build-docker

matrix:
  fast_finish: true
  include:

    - stage: build-yoroi
      os: linux
      dist: trusty
      language: java
      jdk: oraclejdk8
      name: "build Yoroi app (Android)"
      script: *_build_yoroi_script

    - stage: build-yoroi
      os: osx
      name: "build Yoroi app (iOS)"
      script: *_build_yoroi_script

    #- stage: build-docker
    #  script: false

  allow_failures:
    - stage: build-docker

notifications:
  slack:
    on_success: always
    on_failure: always
    rooms:
      # notify rcmorano
      - secure: uLazaQzraN0KlITJo3LiZ+eNP8UPuoLrtk2m7KWQPaqx2pUlBwAQKh7aSVj+QfnXUa4nQ6Q4HPq2P6j08GhD4b5vGjs7bmPk8ro2mnX/ECfgqfuon1CpvvD856DRJB1NlzI0BTlZlTLZ24TfvYFBB4CF5rh+Fe0DESNqqpwbLwOzQMms21I8VM/oFxOx+d4Uu7/rthIk0juxjS1DPLm+Owk761+MzQRq0XQYpsZpvE2w7ESJzpMjp8qTFKbNwJXbiel0ITNRzhzGVVKTNCNPnnbFSy2Ol6/6aLetLOnMQI1S+VZhUifigvcA9Pov9V6BHYk9+mCrsK93XavTwxSYUNenIf2zmIxkHzz0+EV9DXCysFNyxNq8QqOfwfDLHsfnKd2OsbJ/T5XuciHdizK04Fbp4hUl7HewUn7ywm0p8d+27Ddlrbxy5fdTOu+2YvivOpN5le200Xyhoa8u7fP9AhiRDdPCfor8KCbDRDjmZXTPlJFB8FoSs7bAOUQRuTvZqkI7E0BYrXEbGBwL3WANEb0HFECxg22Nxgx5wV4/owyX+iKN2MXLjKQnSUYCUhbu1xPhztd6jScMoNY0yirKVVbn3z6uuOJs3sk+MM5BrPY1PLtDj8cMqYHAGjsgvSRLFsKkwRQsmulrSyJAVY9z8AVmv3CSf6X9LQVCJKjY8SY=
